#!/usr/bin/env sh

#  Copyright Â© 2019, SAS Institute Inc., Cary, NC, USA.  All Rights Reserved.
#  SPDX-License-Identifier: Apache-2.0

getTag3() {
    if test -z "${1:-}"; then
        echo >&2 'Missing container image repository.'
        return 1
    fi
    if test -z "${2:-}"; then
        echo >&2 'Missing container image name.'
        return 1
    fi
    _url="https://repulpmaster.unx.sas.com/v2/${1}/${2}/tags/list"
    curl -s -k "${_url}" | jq -r '[.tags[] | [gsub("[-]";".") | split(".")[] | ("0"*(8-(.|length)))[0:8]+.] | join(".")] | sort | reverse | .[0] | [split(".")[] | tonumber] | join(".")' | sed -e 's/\./-/3'
    unset _url
}

getImages() {

    OPI="sas-esp-operator"
    SRI="sas-event-stream-processing-server-app"
    MTI="sas-event-stream-processing-metering-app"
    LBI="sas-esp-load-balancer"
    O2PI="sas-esp-oauth2-proxy"
    ESMI="sas-event-stream-manager-app"
    STRI="sas-event-stream-processing-streamviewer-app"
    STUI="sas-event-stream-processing-studio-app"

    REPO1="cdp-$BUILD_LEVEL-x64_oci_linux_2-docker-latest"
    
     OP=`getTag3 $REPO1 $OPI`
     SR=`getTag3 $REPO1 $SRI`
     MT=`getTag3 $REPO1 $MTI`
     LB=`getTag3 $REPO1 $LBI`
    O2P=`getTag3 $REPO1 $O2PI`
    ESM=`getTag3 $REPO1 $ESMI`
    STR=`getTag3 $REPO1 $STRI`
    STU=`getTag3 $REPO1 $STUI`

    IMAGE_REGISTRY="${IMAGE_REGISTRY:-repulpmaster.unx.sas.com}"
    export IMAGE_OPERATOR="${IMAGE_REGISTRY}/$REPO1/$OPI:$OP"
    export IMAGE_ESPSRV="${IMAGE_REGISTRY}/$REPO1/$SRI:$SR"
    export IMAGE_METERBILL="${IMAGE_REGISTRY}/$REPO1/$MTI:$MT"
    export IMAGE_LOADBAL="${IMAGE_REGISTRY}/$REPO1/$LBI:$LB"
    export IMAGE_ESPSTUDIO="${IMAGE_REGISTRY}/$REPO1/$STUI:$STU"
    export IMAGE_ESPSTRMVWR="${IMAGE_REGISTRY}/$REPO1/$STRI:$STR"
    export IMAGE_ESPESM="${IMAGE_REGISTRY}/$REPO1/$ESMI:$ESM"
    export IMAGE_ESPOAUTH2P="${IMAGE_REGISTRY}/$REPO1/$O2PI:$O2P"
    export IMAGE_UAA=ghcr.io/skolodzieski/uaa:74.29.0
}

show_usage() {
    echo "must be sourced, i.e. run as:"
    echo ""
    echo "    . ./bin/get-image [-R] | [-S]"
    echo ""
    echo "if run as a script: ./bin/get-images [-R] | [-S]"
    echo "  env variables will not be set!"
    echo "" 
}   


BUILD_LEVEL="snapshot"
[ "$1" == "-R" ] && BUILD_LEVEL=release
[ "$1" == "-S" ] && BUILD_LEVEL=snapshot

[ -z $BUILD_LEVEL ] && show_usage  && return 1

getImages
