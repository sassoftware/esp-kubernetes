#!/bin/bash
#  Copyright Â© 2019, SAS Institute Inc., Cary, NC, USA.  All Rights Reserved.
#  SPDX-License-Identifier: Apache-2.0

ROOT=`dirname $0`
ROOT=`readlink -f $ROOT`

# usage 
#
show_usage() {
    echo "Usage: $0"
    echo ""
    echo "required: -g <geographical location>"
    echo ""
    echo "optional: -p <registry prefix>"
    exit 1
}   

while getopts "?p:g:" opt; do
    case "$opt" in
        \?)
            show_usage
            return 1
            ;;
	p)  BUILD_LEVEL=$OPTARG/
	    ;;
	g)  AWS_LO=$OPTARG
	    ;;
        *)
            echo "bad option <$opt>" && show_usage
    esac
done

[ -z $AWS_LO ] && echo "region EKS cluster resides in must be specified" && show_usage

aws sts get-caller-identity &>/dev/null ; [ 0 -ne $? ] && echo "not logged in to AWS" && exit 1
aws configure set region ${AWS_LO}

AWS_ACCID=$(aws sts get-caller-identity | jq '.Account')
[ 0 -ne $? ] && echo "could not obtain AWS Account ID" && exit 1
AWS_ACCID=$(eval echo $AWS_ACCID)
AWS_CRLS=$AWS_ACCID.dkr.ecr.$AWS_LO.amazonaws.com

get_latest_version() {
    local REPO=$1
    local TAG=$(aws ecr describe-images --repository-name ${REPO}  --query 'sort_by(imageDetails,& imagePushedAt)[-1].imageTags[0]' --output text)
    echo ${REPO}:${TAG}
}

get_image() {
    local LV=`get_latest_version $2`
    FOO=$AWS_CRLS/$LV
    echo "export $1=$FOO"
}

get_image IMAGE_ESPOAUTH2P ${BUILD_LEVEL}sas-esp-oauth2-proxy
get_image IMAGE_ESPESM ${BUILD_LEVEL}sas-event-stream-manager-app
get_image IMAGE_ESPSTRMVWR ${BUILD_LEVEL}sas-event-stream-processing-streamviewer-app
get_image IMAGE_OPERATOR ${BUILD_LEVEL}sas-esp-operator
get_image IMAGE_LOADBAL ${BUILD_LEVEL}sas-esp-load-balancer
get_image IMAGE_ESPSTUDIO ${BUILD_LEVEL}sas-event-stream-processing-studio-app
get_image IMAGE_METERBILL ${BUILD_LEVEL}sas-event-stream-processing-metering-app
get_image IMAGE_ESPSRV ${BUILD_LEVEL}sas-event-stream-processing-server-app
echo "export IMAGE_UAA=ghcr.io/skolodzieski/uaa:75.18.0"
