#!/bin/bash
#  Copyright Â© 2019, SAS Institute Inc., Cary, NC, USA.  All Rights Reserved.
#  SPDX-License-Identifier: Apache-2.0

ROOT=`dirname $0`
ROOT=`readlink -f $ROOT`

# usage 
#
show_usage() {
    echo "Usage: $0"
    echo ""
    echo "required: -P <Google Project>"
    echo ""
    echo "optional: -p <registry prefix>"
    exit 1
}   

while getopts "?p:P:" opt; do
    case "$opt" in
        \?)
            show_usage
            return 1
            ;;
	p)  GCP_PR=$OPTARG
	    ;;
	P)  BUILD_LEVEL=$OPTARG/
	    ;;
        *)
            echo "bad option <$opt>" && show_usage
    esac
done

[ -z $GCP_PR ]       && echo "GCP project (subscription) must be specified" && show_usage

gcloud organizations list &> /dev/null ; [ 0 -ne $? ] && echo "not logged in to GCP" && exit 1

GCP_CRLS=gcr.io/${GCP_PR}

get_latest_version() {
    local REPO=$1
    local TAG=$(eval echo $(gcloud container images list-tags ${GCP_CRLS}/${REPO} --limit=1 --format=json | jq .[0].tags[0]))
    echo ${REPO}:${TAG}
}

get_image() {
    local LV=`get_latest_version $2`
    FOO=$GCP_CRLS/$LV
    echo "export $1=$FOO"
}

get_image IMAGE_ESPESM ${BUILD_LEVEL}sas-event-stream-manager-app
get_image IMAGE_ESPSTRMVWR ${BUILD_LEVEL}sas-event-stream-processing-streamviewer-app
get_image IMAGE_OPERATOR ${BUILD_LEVEL}sas-esp-operator
get_image IMAGE_ESPSTUDIO ${BUILD_LEVEL}sas-event-stream-processing-studio-app
get_image IMAGE_METERBILL ${BUILD_LEVEL}sas-event-stream-processing-metering-app
get_image IMAGE_ESPSRV ${BUILD_LEVEL}sas-event-stream-processing-server-app
echo "export IMAGE_OAUTH2P='quay.io/oauth2-proxy/oauth2-proxy:v7.4.0'"
echo "export IMAGE_UAA=ghcr.io/skolodzieski/uaa:75.18.0"
