#!/bin/bash
#  Copyright Â© 2019, SAS Institute Inc., Cary, NC, USA.  All Rights Reserved.
#  SPDX-License-Identifier: Apache-2.0

ROOT=`dirname $0`
ROOT=`readlink -f $ROOT`

# usage
#
show_usage() {
    echo "Usage: $0"
    echo ""
    echo "required: -c <cluster name> -t <tenant name>"
    echo "          -g <geographical location>"
    echo ""
    exit 1
}

while getopts "?c:t:g:" opt; do
    case "$opt" in
        \?)
            show_usage
            return 1
            ;;
        c)  AWS_CL=$OPTARG
            ;;
        t)  AWS_NS=$OPTARG
            ;;
        g)  AWS_LO=$OPTARG
            ;;
        *)
            echo "bad option <$opt>" && show_usage
    esac
done

[ -z $AWS_CL ]       && echo "cluster name must be specified" && show_usage
[ -z $AWS_NS ]       && echo "K8s namespace must be specified" && show_usage
[ -z $AWS_LO ]       && echo "region EKS cluster resides in must be specified" && show_usage

aws sts get-caller-identity &>/dev/null ; [ 0 -ne $? ] && echo "not logged in to AWS" && exit 1
aws configure set region ${AWS_LO}


echo "creating K8 namespace"
kubectl get ns/$AWS_NS &> /dev/null
[ 0 -ne $? ] && kubectl create ns $AWS_NS

USE_EKS="${USE_EKS:-}"
[[ "${USE_EKS}" == 'yes' ]] && USE_EKS='true' || USE_EKS='false'

if "${USE_EKS}"; then
    AWS_FS=$(aws efs describe-file-systems --query "FileSystems[?Name == \`${AWS_CL}-efs\`].FileSystemId" | jq .[0])
    AWS_FS=$(eval echo ${AWS_FS})

    # Now we create an access-point in EFS for the tenant.
    #
    echo "creating EFS access point"
    aws efs create-access-point --client-token ${AWS_NS} \
        --file-system-id ${AWS_FS} --posix-user Uid=1001,Gid=1001 \
        --root-directory "Path=/${AWS_NS},CreationInfo={OwnerUid=1001,OwnerGid=1001,Permissions=0755}" >> /dev/null

    AWS_AP=$(aws efs describe-access-points --file-system-id ${AWS_FS} |  jq " .AccessPoints[] | select(.ClientToken==\"${AWS_NS}\") | .AccessPointId")
    AWS_AP=$(eval echo ${AWS_AP})

    echo "creating RWX persistent volume"
    kubectl apply -f - <<EOF
apiVersion: v1
kind: PersistentVolume
metadata:
  name: efs-pv-${AWS_NS}
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: efs-sc
  csi:
    driver: efs.csi.aws.com
    volumeHandle: ${AWS_FS}::${AWS_AP}
EOF
fi


AWS_DM=$(kubectl -n ingress-nginx get svc/ingress-nginx-controller -o json | jq .status.loadBalancer.ingress[0].hostname)

echo ""
echo ""
echo "Created Kubernetes namespace, EFS access point, and"
echo "   RXW persistent volume"
echo ""
echo "You must add an alias record to DNS that points"
echo ""
echo "   ${AWS_NS}.<your domain>  --> ${AWS_DM}"
echo ""
echo "cluster namespace: $AWS_NS"
echo ""
