apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    app: postgres
data:
  PGDATA: /mnt/data/postgres
---
kind: Service
apiVersion: v1
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP # TCP
      targetPort: 5432
      port: 80
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      TEMPLATE_ESP_AZUREimagePullSecrets:
      TEMPLATE_ESP_AZURE  - name: acr-secret
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: postgres
          securityContext:
            readOnlyRootFilesystem: true
          image: ghcr.io/skolodzieski/postgres:12.5
          ports:
            - containerPort: 5432 # servers REST port
              name: postgresdb
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: password
            - name: POSTGRES_DB # force default DB to esp 
              value: esp
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - name: data # the volume specified below
              mountPath: /mnt/data # path persistent volume gets mounted to
            - name: pid
              mountPath: /var/run/postgresql
            - name: tmp
              mountPath: /tmp
      initContainers:
        - name: config-data
          securityContext:
            readOnlyRootFilesystem: true
          image: ghcr.io/skolodzieski/busybox:1.33.0
          #
          # Our nfs PV is owned by sas:sas which is 1001:1001, so
          #    use those credentials to make <namespace>/{DB,input,output}
          #    directories.
          #
          command: ['sh', '-c', 'mkdir -p /mnt/data/postgres']
          volumeMounts:
            - name: data
              mountPath: /mnt/data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: esp-pv-pg
        - name: pid
          emptyDir: {}
        - name: tmp
          emptyDir: {}
