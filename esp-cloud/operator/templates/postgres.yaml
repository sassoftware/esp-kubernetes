apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    app: postgres
data:
  PGDATA: /mnt/data/postgres
---
kind: Service
apiVersion: v1 
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP            # TCP
      targetPort: 5432
      port: 80              
  type: ClusterIP
---
apiVersion: apps/v1 
kind: Deployment
metadata:
  name: postgres-deployment
spec:
  replicas: 1
  selector:
     matchLabels:
       app: postgres
  template:
       metadata:
         annotations:
           seccomp.security.alpha.kubernetes.io/pod: runtime/default
         labels:
           app: postgres
       spec:
         TEMPLATE_ESP_AZUREimagePullSecrets:
         TEMPLATE_ESP_AZURE  - name: acr-secret         
         containers:
         - name: postgres
           image: ghcr.io/skolodzieski/postgres:12.5
           securityContext:
             allowPrivilegeEscalation: false
             TEMPLATE_ESP_NOAZURErunAsUser:  1001
             TEMPLATE_ESP_NOAZURErunAsGroup: 1001
             TEMPLATE_ESP_NOAZURErunAsNonRoot: true             
           ports:
             - containerPort: 5432  # servers REST port
               name: postgresdb
           env:
             - name: POSTGRES_USER
               valueFrom:
                 secretKeyRef:
                   name: postgres-secret
                   key:  username
             - name: POSTGRES_PASSWORD
               valueFrom:
                 secretKeyRef:
                   name: postgres-secret
                   key:  password
             - name: POSTGRES_DB   # force default DB to esp 
               value: esp
           envFrom:
             - configMapRef: 
                name: postgres-config
           volumeMounts:
              - name: data            # the volume specified below
                mountPath: /mnt/data  # path persistent volume gets mounted to
         initContainers:
         - name: config-data
           image: ghcr.io/skolodzieski/busybox:1.33.0
           #
           # Our nfs PV is owned by sas:sas which is 1001:1001, so
           #    use those credentials to make <namespace>/{DB,input,output}
           #    directories.
           #
           securityContext:
             allowPrivilegeEscalation: false
             TEMPLATE_ESP_NOAZURErunAsUser:  1001
             TEMPLATE_ESP_NOAZURErunAsGroup: 1001
             TEMPLATE_ESP_NOAZURErunAsNonRoot: true             
           command: ['sh', '-c', 'mkdir -p /mnt/data/postgres']
           volumeMounts:
           - name: data
             mountPath: /mnt/data
         volumes:
           - name: data
             persistentVolumeClaim:
               claimName: esp-pv-pg
 #          - name: postgres-init
 #            configMap:
 #              name: espdb-config
 #              items:
 #              - key: init-esp.sh
 #                path: init-esp.sh
            
