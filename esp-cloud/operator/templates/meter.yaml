kind: Service
apiVersion: v1
metadata:
  name: sas-event-stream-processing-metering-app
spec:
  selector:
    app: sas-event-stream-processing-metering-app
  ports:
    - name: "80"
      protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sas-event-stream-processing-metering-app
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/ingress.allow-http: "false"
    nginx.ingress.kubernetes.io/proxy-body-size: 500m
    nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: nginx
  rules:
    - host: TEMPLATE_ESP_NAMESPACE.TEMPLATE_ESP_DOMAIN
      http:
        paths:
          - path: /SASEventStreamProcessingMetering(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: sas-event-stream-processing-metering-app # the service to hit
                port:
                  number: 80 # externally exposed port
  tls:
    - hosts:
        - TEMPLATE_ESP_NAMESPACE.TEMPLATE_ESP_DOMAIN
      secretName: foo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sas-event-stream-processing-metering-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sas-event-stream-processing-metering-app
  template:
    metadata:
      labels:
        app: sas-event-stream-processing-metering-app
    spec:
      TEMPLATE_ESP_AZUREimagePullSecrets:
      TEMPLATE_ESP_AZURE  - name: acr-secret
      serviceAccountName: sas-esp-clients
      containers:
        - name: esm-container
          image: TEMPLATE_ESP_METER_IMAGE
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsUser: 1001
            runAsNonRoot: true
          ports:
            - containerPort: 8080
          env:
            - name: SAS_VIYA_ENABLED
              value: "false"
            - name: SAS_MULTI_TENANCY_ENABLED
              value: "true"
            - name: SAS_ESP_COMMON_KUBERNETES_DEFAULTS_PERSISTENTVOLUMECLAIM
              value: esp-pv
            - name: SAS_ESP_COMMON_KUBERNETES
              value: "true"
            - name: SAS_ESP_COMMON_KUBERNETES_NAMESPACE
              value: sckolo
            - name: SAS_ESP_COMMON_APP_AUTHZ_COOKIE
              value: "true"
            - name: SAS_ESP_COMMON_APP_AUTHZ_COOKIE_NAME
              value: "_oauth2_proxy"
            - name: ESP_OAUTH2_ENABLED
              value: "false"
            - name: server_servlet_context_path
              value: "/"
            #
            # Below is the postgres configuration
            #
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://postgres-service:80/esp"
            - name: spring_datasource_username
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: username
            - name: spring_datasource_password
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: password
            - name: spring_datasource_platform
              value: "postgresql"
            - name: spring_datasource_driver_class_name
              value: "org.postgresql.Driver"
          #
          # END postgres config
          #
          volumeMounts:
            - name: tmpdir
              mountPath: /tmp
      volumes:
        - name: tmpdir
          emptyDir: {}
