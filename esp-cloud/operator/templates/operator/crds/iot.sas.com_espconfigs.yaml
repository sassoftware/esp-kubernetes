---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: espconfigs.iot.sas.com
spec:
  group: iot.sas.com
  names:
    kind: ESPConfig
    listKind: ESPConfigList
    plural: espconfigs
    singular: espconfig
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ESPConfig is the Schema for the espconfigs API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ESPConfigSpec defines the desired state of ESPConfig
              properties:
                espProperties:
                  additionalProperties:
                    type: string
                  description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "operator-sdk generate k8s" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html'
                  type: object
                limits:
                  additionalProperties:
                    type: string
                  type: object
                loadBalancerTemplate:
                  description: ESPLoadBalancerTemplate defines the ESP load balancer template.
                  properties:
                    deployment:
                      description: "ESPTemplate defines an unstructured object that is used as a template to create other Kubernetes resources. \n Since the template is unstructured, any object may be defined in the template and will be accepted by the Kubernetes API since there are no API schema validations defined on the template. This means that Kubernetes resource this template represents will be validated when the Kubernetes resource is created. It is recommended that the template structure is verfied as a valid Kubernetes resource beforehand to avoid runtime errors. See https://kubernetes.io/docs/reference/kubernetes-api/ for a list of Kubernetes resources. \n Fields in the template may contain placeholders that are replaced with values when the Kubernetes resource is created. This has the implication that there may be field validation errors at runtime."
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
                operatorProperties:
                  additionalProperties:
                    type: string
                  type: object
                projectTemplate:
                  description: ESPProjectTemplate defines the ESP project template.
                  properties:
                    autoscale:
                      description: ESPautoscaler defines the ESP horizontal pod autoscaler.
                      properties:
                        maxReplicas:
                          format: int32
                          type: integer
                        metrics:
                          items:
                            description: MetricSpec specifies how to scale based on a single metric (only `type` and one other matching field should be set at once).
                            properties:
                              containerResource:
                                description: container resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing a single container in each pod of the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source. This is an alpha feature and can be enabled by the HPAContainerMetrics feature flag.
                                properties:
                                  container:
                                    description: container is the name of the container in the pods of the scaling target
                                    type: string
                                  name:
                                    description: name is the name of the resource in question.
                                    type: string
                                  target:
                                    description: target specifies the target value for the given metric
                                    properties:
                                      averageUtilization:
                                        description: averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods. Currently only valid for Resource metric source type
                                        format: int32
                                        type: integer
                                      averageValue:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: averageValue is the target value of the average of the metric across all relevant pods (as a quantity)
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      type:
                                        description: type represents whether the metric type is Utilization, Value, or AverageValue
                                        type: string
                                      value:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: value is the target value of the metric (as a quantity).
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                    required:
                                      - type
                                    type: object
                                required:
                                  - container
                                  - name
                                  - target
                                type: object
                              external:
                                description: external refers to a global metric that is not associated with any Kubernetes object. It allows autoscaling based on information coming from components running outside of cluster (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).
                                properties:
                                  metric:
                                    description: metric identifies the target metric by name and selector
                                    properties:
                                      name:
                                        description: name is the name of the given metric
                                        type: string
                                      selector:
                                        description: selector is the string-encoded form of a standard kubernetes label selector for the given metric When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping. When unset, just the metricName will be used to gather metrics.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                            items:
                                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                                - key
                                                - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                    required:
                                      - name
                                    type: object
                                  target:
                                    description: target specifies the target value for the given metric
                                    properties:
                                      averageUtilization:
                                        description: averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods. Currently only valid for Resource metric source type
                                        format: int32
                                        type: integer
                                      averageValue:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: averageValue is the target value of the average of the metric across all relevant pods (as a quantity)
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      type:
                                        description: type represents whether the metric type is Utilization, Value, or AverageValue
                                        type: string
                                      value:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: value is the target value of the metric (as a quantity).
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                    required:
                                      - type
                                    type: object
                                required:
                                  - metric
                                  - target
                                type: object
                              object:
                                description: object refers to a metric describing a single kubernetes object (for example, hits-per-second on an Ingress object).
                                properties:
                                  describedObject:
                                    description: CrossVersionObjectReference contains enough information to let you identify the referred resource.
                                    properties:
                                      apiVersion:
                                        description: API version of the referent
                                        type: string
                                      kind:
                                        description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"'
                                        type: string
                                      name:
                                        description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                  metric:
                                    description: metric identifies the target metric by name and selector
                                    properties:
                                      name:
                                        description: name is the name of the given metric
                                        type: string
                                      selector:
                                        description: selector is the string-encoded form of a standard kubernetes label selector for the given metric When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping. When unset, just the metricName will be used to gather metrics.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                            items:
                                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                                - key
                                                - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                    required:
                                      - name
                                    type: object
                                  target:
                                    description: target specifies the target value for the given metric
                                    properties:
                                      averageUtilization:
                                        description: averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods. Currently only valid for Resource metric source type
                                        format: int32
                                        type: integer
                                      averageValue:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: averageValue is the target value of the average of the metric across all relevant pods (as a quantity)
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      type:
                                        description: type represents whether the metric type is Utilization, Value, or AverageValue
                                        type: string
                                      value:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: value is the target value of the metric (as a quantity).
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                    required:
                                      - type
                                    type: object
                                required:
                                  - describedObject
                                  - metric
                                  - target
                                type: object
                              pods:
                                description: pods refers to a metric describing each pod in the current scale target (for example, transactions-processed-per-second).  The values will be averaged together before being compared to the target value.
                                properties:
                                  metric:
                                    description: metric identifies the target metric by name and selector
                                    properties:
                                      name:
                                        description: name is the name of the given metric
                                        type: string
                                      selector:
                                        description: selector is the string-encoded form of a standard kubernetes label selector for the given metric When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping. When unset, just the metricName will be used to gather metrics.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                            items:
                                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                                - key
                                                - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                    required:
                                      - name
                                    type: object
                                  target:
                                    description: target specifies the target value for the given metric
                                    properties:
                                      averageUtilization:
                                        description: averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods. Currently only valid for Resource metric source type
                                        format: int32
                                        type: integer
                                      averageValue:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: averageValue is the target value of the average of the metric across all relevant pods (as a quantity)
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      type:
                                        description: type represents whether the metric type is Utilization, Value, or AverageValue
                                        type: string
                                      value:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: value is the target value of the metric (as a quantity).
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                    required:
                                      - type
                                    type: object
                                required:
                                  - metric
                                  - target
                                type: object
                              resource:
                                description: resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing each pod in the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.
                                properties:
                                  name:
                                    description: name is the name of the resource in question.
                                    type: string
                                  target:
                                    description: target specifies the target value for the given metric
                                    properties:
                                      averageUtilization:
                                        description: averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods. Currently only valid for Resource metric source type
                                        format: int32
                                        type: integer
                                      averageValue:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: averageValue is the target value of the average of the metric across all relevant pods (as a quantity)
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      type:
                                        description: type represents whether the metric type is Utilization, Value, or AverageValue
                                        type: string
                                      value:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: value is the target value of the metric (as a quantity).
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                    required:
                                      - type
                                    type: object
                                required:
                                  - name
                                  - target
                                type: object
                              type:
                                description: 'type is the type of metric source.  It should be one of "ContainerResource", "External", "Object", "Pods" or "Resource", each mapping to a matching field in the object. Note: "ContainerResource" type is available on when the feature-gate HPAContainerMetrics is enabled'
                                type: string
                            required:
                              - type
                            type: object
                          type: array
                        minReplicas:
                          format: int32
                          type: integer
                      required:
                        - maxReplicas
                        - metrics
                        - minReplicas
                      type: object
                    deployment:
                      description: Deployment is a ESP template that represents a Kubernetes Deployment. Placeholders in fields are replaced with values before the Kubernetes Deployment is created.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    httpProxy:
                      description: "ESPTemplate defines an unstructured object that is used as a template to create other Kubernetes resources. \n Since the template is unstructured, any object may be defined in the template and will be accepted by the Kubernetes API since there are no API schema validations defined on the template. This means that Kubernetes resource this template represents will be validated when the Kubernetes resource is created. It is recommended that the template structure is verfied as a valid Kubernetes resource beforehand to avoid runtime errors. See https://kubernetes.io/docs/reference/kubernetes-api/ for a list of Kubernetes resources. \n Fields in the template may contain placeholders that are replaced with values when the Kubernetes resource is created. This has the implication that there may be field validation errors at runtime."
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    httpService:
                      description: "ESPTemplate defines an unstructured object that is used as a template to create other Kubernetes resources. \n Since the template is unstructured, any object may be defined in the template and will be accepted by the Kubernetes API since there are no API schema validations defined on the template. This means that Kubernetes resource this template represents will be validated when the Kubernetes resource is created. It is recommended that the template structure is verfied as a valid Kubernetes resource beforehand to avoid runtime errors. See https://kubernetes.io/docs/reference/kubernetes-api/ for a list of Kubernetes resources. \n Fields in the template may contain placeholders that are replaced with values when the Kubernetes resource is created. This has the implication that there may be field validation errors at runtime."
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    ingress:
                      description: "ESPTemplate defines an unstructured object that is used as a template to create other Kubernetes resources. \n Since the template is unstructured, any object may be defined in the template and will be accepted by the Kubernetes API since there are no API schema validations defined on the template. This means that Kubernetes resource this template represents will be validated when the Kubernetes resource is created. It is recommended that the template structure is verfied as a valid Kubernetes resource beforehand to avoid runtime errors. See https://kubernetes.io/docs/reference/kubernetes-api/ for a list of Kubernetes resources. \n Fields in the template may contain placeholders that are replaced with values when the Kubernetes resource is created. This has the implication that there may be field validation errors at runtime."
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    pubsubService:
                      description: "ESPTemplate defines an unstructured object that is used as a template to create other Kubernetes resources. \n Since the template is unstructured, any object may be defined in the template and will be accepted by the Kubernetes API since there are no API schema validations defined on the template. This means that Kubernetes resource this template represents will be validated when the Kubernetes resource is created. It is recommended that the template structure is verfied as a valid Kubernetes resource beforehand to avoid runtime errors. See https://kubernetes.io/docs/reference/kubernetes-api/ for a list of Kubernetes resources. \n Fields in the template may contain placeholders that are replaced with values when the Kubernetes resource is created. This has the implication that there may be field validation errors at runtime."
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    route:
                      description: "ESPTemplate defines an unstructured object that is used as a template to create other Kubernetes resources. \n Since the template is unstructured, any object may be defined in the template and will be accepted by the Kubernetes API since there are no API schema validations defined on the template. This means that Kubernetes resource this template represents will be validated when the Kubernetes resource is created. It is recommended that the template structure is verfied as a valid Kubernetes resource beforehand to avoid runtime errors. See https://kubernetes.io/docs/reference/kubernetes-api/ for a list of Kubernetes resources. \n Fields in the template may contain placeholders that are replaced with values when the Kubernetes resource is created. This has the implication that there may be field validation errors at runtime."
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
                routerTemplate:
                  description: ESPRouterTemplate defines the ESP router template.
                  properties:
                    deployment:
                      description: "ESPTemplate defines an unstructured object that is used as a template to create other Kubernetes resources. \n Since the template is unstructured, any object may be defined in the template and will be accepted by the Kubernetes API since there are no API schema validations defined on the template. This means that Kubernetes resource this template represents will be validated when the Kubernetes resource is created. It is recommended that the template structure is verfied as a valid Kubernetes resource beforehand to avoid runtime errors. See https://kubernetes.io/docs/reference/kubernetes-api/ for a list of Kubernetes resources. \n Fields in the template may contain placeholders that are replaced with values when the Kubernetes resource is created. This has the implication that there may be field validation errors at runtime."
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
              required:
                - espProperties
                - operatorProperties
              type: object
            status:
              description: ESPConfigStatus defines the observed state of ESPConfig
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
