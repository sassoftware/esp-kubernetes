kind: Service
apiVersion: v1
metadata:
  name: sas-event-stream-processing-streamviewer-app
spec:
  selector:
    app: sas-event-stream-processing-streamviewer-app
  ports:
    - name: "80"
      protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sas-event-stream-processing-streamviewer-app
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/ingress.allow-http: "false"    
    nginx.ingress.kubernetes.io/proxy-body-size: 500m
    nginx.ingress.kubernetes.io/rewrite-target: /SASEventStreamProcessingStreamviewer/$2
    TEMPLATE_ESP_MULTInginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
    TEMPLATE_ESP_MULTInginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
spec:
  rules:
  - host: TEMPLATE_ESP_NAMESPACE.TEMPLATE_ESP_DOMAIN
    http:
      paths:
        - path: /SASEventStreamProcessingStreamviewer(/|$)(.*)
          pathType: Prefix
          backend:
            service:
              name: sas-event-stream-processing-streamviewer-app # the service to hit
              port:
                number: 80            # externally exposed port
  tls:
  - hosts:
    - TEMPLATE_ESP_NAMESPACE.TEMPLATE_ESP_DOMAIN
    secretName: foo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sas-event-stream-processing-streamviewer-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sas-event-stream-processing-streamviewer-app
  template:
    metadata:
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: runtime/default      
      labels:
        app: sas-event-stream-processing-streamviewer-app
    spec:
      TEMPLATE_ESP_AZUREimagePullSecrets:
      TEMPLATE_ESP_AZURE  - name: acr-secret
      serviceAccountName: sas-esp-clients
      containers:
      - name: streamviewer-container
        image: TEMPLATE_STREAMVIEWER_IMAGE
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsGroup: 1001
          runAsUser: 1001
          runAsNonRoot: true        
        ports:
        - containerPort: 8080
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
          capabilities:
            add: []
            drop:
            - ALL
        env:
        - name: SV_AUTH
          value: "false"
        - name: SAS_MULTI_TENANCY_ENABLED
          value: "true"
        - name: SAS_ESP_COMMON_KUBERNETES
          value: "true"
        - name: SAS_ESP_COMMON_KUBERNETES_NAMESPACE
          value: TEMPLATE_ESP_NAMESPACE
        - name: SAS_ESP_COMMON_APP_AUTHZ_COOKIE_ENCRYPTED_ENABLED
          value: "true"
        - name: SAS_ESP_COMMON_APP_AUTHZ_COOKIE_NAME
          value: "user"
        - name: SAS_ESP_COMMON_USER-AUTH-FIELD_ID
          value: "Name"
        - name: SAS_ESP_COMMON_USER-AUTH-FIELD_NAME
          value: "Email"
        - name: SAS_ESP_COMMON_APP_AUTHZ_COOKIE_ENCRYPTED_KEY_SECRET
          value: "sas-esp-oauth2-proxy"
        #
        # Below is the postgres config
        #
        - name: ESP_STREAMVIEWER_DB
          value: "true"
        - name: spring_datasource_url
          value: "jdbc:postgresql://postgres-service:80/esp"
        - name: spring_datasource_username
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key:  username
        - name: spring_datasource_password
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key:  password
        - name: spring_datasource_platform
          value: "postgresql"
        - name: spring_datasource_driver_class_name
          value: "org.postgresql.Driver"
        volumeMounts:
          - name: tmpdir
            mountPath: /tmp
      volumes:
        - name: tmpdir
          emptyDir: {}
